{"version":3,"sources":["components/Dashboard/OrderList.module.css","components/Dashboard/Order.module.css","components/Dashboard/OrderSummary.module.css","components/Dashboard/Order.js","components/Dashboard/OrderList.js","components/Dashboard/OrderSummary.js","components/Dashboard/Admin.js","pages/AdminDashboard.js"],"names":["module","exports","Order","props","cartItems","items","useState","showItems","setShowItems","totalPrice","totalQuantity","key","itemPrice","itemQuantity","itemsRow","map","cartItem","itemId","itemName","Fragment","className","classes","order","name","address","street","price","toFixed","onClick","table","OrderList","dispatch","useDispatch","orders","setOrders","isError","setIsError","isLoading","setIsLoading","useEffect","a","fetch","response","ok","Error","json","data","loadedOrders","itemKey","loadedItems","orderData","push","title","quantity","authActions","calculateOrderSummary","totalOrderedQuantity","totalOrderedPrice","id","userData","message","fetchOrdersHandler","ordersList","content","length","Card","OrderSummary","useSelector","state","auth","summary","Admin","AdminDashboard"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,gBAAgB,mC,mBCArED,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,uB,mBCAxFD,EAAOC,QAAU,CAAC,QAAU,gC,0ICoEbC,EAjED,SAAAC,GACZ,IAAMC,EAAYD,EAAME,MACxB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEIC,EAAa,EACbC,EAAgB,EAEpB,IAAK,IAAMC,KAAOP,EAChBK,GAAcL,EAAUO,GAAKC,UAAYR,EAAUO,GAAKE,aACxDH,GAAiBN,EAAUO,GAAKE,aAGlC,IAQMC,EAAWV,EAAUW,KAAI,SAAAC,GAAQ,OACrC,+BACE,6BAAKA,EAASC,SACd,6BAAKD,EAASE,WACd,6BAAKF,EAASJ,YACd,6BAAKI,EAASH,eACd,6BAAKG,EAASJ,UAAYI,EAASH,iBAL5BG,EAASC,WASpB,OACE,eAAC,IAAME,SAAP,WACE,qBAAIC,UAAWC,IAAQC,MAAvB,UACE,gCACE,6BAAKnB,EAAMoB,OACX,qBAAKH,UAAWC,IAAQG,QAAxB,SAAkCrB,EAAMsB,SACxC,kDACkB,+BAAOf,UAG3B,gCACE,sBAAKU,UAAWC,IAAQK,MAAxB,cAAiCjB,EAAWkB,QAAQ,MACpD,yBAAQC,QA9BS,WAErBpB,GADED,IA6BE,UAAoCA,EAAY,OAAS,OAAzD,kBAGHA,GACC,8BACE,wBAAOa,UAAWC,IAAQQ,MAA1B,UACE,gCACE,+BACE,yCACA,uCACA,uCACA,0CACA,kDAGJ,gCAAQf,a,eCqCLgB,EA3FG,WAChB,IAAMC,EAAWC,cAEjB,EAA4B1B,mBAAS,IAArC,mBAAO2B,EAAP,KAAeC,EAAf,KACA,EAA8B5B,mBAAS,MAAvC,mBAAO6B,EAAP,KAAgBC,EAAhB,KACA,EAAkC9B,oBAAS,GAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WAAM,4CACd,sCAAAC,EAAA,6DACEJ,EAAW,MACXE,GAAa,GAFf,kBAI2BG,MACrB,oEALN,WAIUC,EAJV,QAQkBC,GARlB,sBASY,IAAIC,MAAM,wBATtB,wBAWuBF,EAASG,OAXhC,QAiBI,IAAWlC,KANLmC,EAXV,OAeQC,EAAe,GAEDD,EAAM,CAEtB,IAAWE,KADPC,EAAc,GACIH,EAAKnC,GAAKuC,UAC9BD,EAAYE,KAAK,CACflC,OAAQ+B,EACR9B,SAAU4B,EAAKnC,GAAKuC,UAAUF,GAASI,MACvCxC,UAAWkC,EAAKnC,GAAKuC,UAAUF,GAAStB,MACxCb,aAAciC,EAAKnC,GAAKuC,UAAUF,GAASK,WAI/CtB,EAASuB,IAAYC,sBAAsB,CACzC7C,cAAeoC,EAAKnC,GAAK6C,qBACzB/C,WAAYqC,EAAKnC,GAAK8C,qBAKxBV,EAAaI,KAAK,CAChBO,GAAI/C,EACJY,KAAMuB,EAAKnC,GAAKgD,SAASpC,KACzBE,OAAQqB,EAAKnC,GAAKgD,SAASlC,OAC3BpB,MAAO4C,IAGXf,EAAUa,GA1Cd,kDA4CIX,EAAW,KAAMwB,SA5CrB,QA8CEtB,GAAa,GA9Cf,2DADc,uBAAC,WAAD,wBAiDduB,KACC,CAAC9B,IAEJ,IAAM+B,EAAa7B,EAAOlB,KAAI,SAAAO,GAAK,OACjC,cAAC,EAAD,CAEEoC,GAAIpC,EAAMoC,GACVnC,KAAMD,EAAMC,KACZE,OAAQH,EAAMG,OACdpB,MAAOiB,EAAMjB,OAJRiB,EAAMoC,OAQXK,EAAU,gDAed,OAbID,EAAWE,OAAS,IACtBD,EAAUD,GAGR3B,IACF4B,EAAU,4BAAI5B,KAGZE,IACF0B,EAAU,4CAKV,yBAAS3C,UAAWC,IAAQY,OAA5B,SACE,cAACgC,EAAA,EAAD,UAAOF,O,iBChFEG,EAVM,WACjB,IAAMT,EAAoBU,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKZ,qBACpDD,EAAuBW,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKb,wBAE7D,OAAO,0BAASpC,UAAWC,IAAQiD,QAA5B,UACH,uDAA0Bb,EAAkB9B,QAAQ,MACpD,0DAA6B6B,SCItBe,EATD,WACV,OACI,eAAC,WAAD,WACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFOC,UAJQ,WACnB,OAAO,cAAC,EAAD","file":"static/js/4.5f7446f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"OrderList_orders__35uvZ\",\"orders-appear\":\"OrderList_orders-appear__2R1E8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"Order_order__1T5N8\",\"address\":\"Order_address__2t9e-\",\"price\":\"Order_price__3Bvfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"OrderSummary_summary__Q1IBy\"};","import classes from './Order.module.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Order = props => {\r\n  const cartItems = props.items;\r\n  const [showItems, setShowItems] = useState(false);\r\n\r\n  let totalPrice = 0;\r\n  let totalQuantity = 0;\r\n\r\n  for (const key in cartItems) {\r\n    totalPrice += cartItems[key].itemPrice * cartItems[key].itemQuantity;\r\n    totalQuantity += cartItems[key].itemQuantity;\r\n  }\r\n\r\n  const showItemsHandler = () => {\r\n    if (showItems) {\r\n      setShowItems(false);\r\n    } else {\r\n      setShowItems(true);\r\n    }\r\n  };\r\n\r\n  const itemsRow = cartItems.map(cartItem => (\r\n    <tr key={cartItem.itemId}>\r\n      <td>{cartItem.itemId}</td>\r\n      <td>{cartItem.itemName}</td>\r\n      <td>{cartItem.itemPrice}</td>\r\n      <td>{cartItem.itemQuantity}</td>\r\n      <td>{cartItem.itemPrice * cartItem.itemQuantity}</td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <li className={classes.order}>\r\n        <div>\r\n          <h3>{props.name}</h3>\r\n          <div className={classes.address}>{props.street}</div>\r\n          <h4>\r\n            Total Quantity: <span>{totalQuantity}</span>\r\n          </h4>\r\n        </div>\r\n        <div>\r\n          <div className={classes.price}>${totalPrice.toFixed(2)}</div>\r\n          <button onClick={showItemsHandler}>{showItems ? 'Hide' : 'Show'} Items</button>\r\n        </div>\r\n      </li>\r\n      {showItems && (\r\n        <div>\r\n          <table className={classes.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>Item ID</th>\r\n                <th>Title</th>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                <th>Total Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{itemsRow}</tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import Card from '../UI/Card';\r\nimport classes from './OrderList.module.css';\r\nimport Order from './Order';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authActions } from '../../store/auth-slice';\r\n\r\nconst OrderList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [isError, setIsError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchOrdersHandler() {\r\n      setIsError(null);\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          'https://react-http-597d3-default-rtdb.firebaseio.com/orders.json'\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Something went wrong');\r\n        }\r\n        const data = await response.json();\r\n\r\n        // console.log(data);\r\n\r\n        let loadedOrders = [];\r\n        \r\n        for (const key in data) {\r\n          let loadedItems = [];\r\n          for (const itemKey in data[key].orderData) {\r\n            loadedItems.push({\r\n              itemId: itemKey,\r\n              itemName: data[key].orderData[itemKey].title,\r\n              itemPrice: data[key].orderData[itemKey].price,\r\n              itemQuantity: data[key].orderData[itemKey].quantity,\r\n            })\r\n          }\r\n\r\n          dispatch(authActions.calculateOrderSummary({\r\n            totalQuantity: data[key].totalOrderedQuantity,\r\n            totalPrice: data[key].totalOrderedPrice\r\n          }))\r\n\r\n\r\n\r\n          loadedOrders.push({\r\n            id: key,\r\n            name: data[key].userData.name,\r\n            street: data[key].userData.street,\r\n            items: loadedItems,\r\n          });\r\n        }\r\n        setOrders(loadedOrders);\r\n      } catch (error) {\r\n        setIsError(error.message);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    fetchOrdersHandler();\r\n  }, [dispatch]);\r\n\r\n  const ordersList = orders.map(order => (      \r\n    <Order\r\n      key={order.id}\r\n      id={order.id}\r\n      name={order.name}\r\n      street={order.street}\r\n      items={order.items}\r\n    />\r\n  ));\r\n\r\n  let content = <p>Found no meals.</p>;\r\n\r\n  if (ordersList.length > 0) {\r\n    content = ordersList;\r\n  }\r\n\r\n  if (isError) {\r\n    content = <p>{isError}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n\r\n  return (\r\n    <section className={classes.orders}>\r\n      <Card>{content}</Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import classes from './OrderSummary.module.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OrderSummary = () => {\r\n    const totalOrderedPrice = useSelector(state => state.auth.totalOrderedPrice)\r\n    const totalOrderedQuantity = useSelector(state => state.auth.totalOrderedQuantity)\r\n\r\n    return <section className={classes.summary}>\r\n        <h2>Total Ordered Price: {totalOrderedPrice.toFixed(2)}</h2>\r\n        <h2>Total Ordered Quantity: {totalOrderedQuantity}</h2>   \r\n    </section>\r\n}\r\n\r\nexport default OrderSummary;","import { Fragment } from \"react\";\r\nimport OrderList from \"./OrderList\";\r\nimport OrderSummary from \"./OrderSummary\";\r\n\r\nconst Admin = () => {\r\n    return (\r\n        <Fragment>\r\n        <OrderSummary/>\r\n        <OrderList/>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Admin;","import Admin from \"../components/Dashboard/Admin\"\r\n\r\nconst AdminDashboard = () => {\r\n    return <Admin/>\r\n}\r\n\r\nexport default AdminDashboard;"],"sourceRoot":""}